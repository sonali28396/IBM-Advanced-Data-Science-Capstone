{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Code.py",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyP1bRZ9zZFzY5pJuuHJqST/",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sonali28396/IBM-Advanced-Data-Science-Capstone/blob/master/Code.py%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MhpNIbn-_PeN",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# importing packages\n",
        "import streamlit as st \n",
        "import pandas as pd \n",
        "import numpy as np \n",
        "import matplotlib.pyplot as plt \n",
        "import matplotlib\n",
        "matplotlib.use(\"Agg\")\n",
        "import seaborn as sns \n",
        "from scipy import stats\n",
        "import statsmodels.api as sm\n",
        "from statsmodels.formula.api import ols"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wUxnDbrC-hml",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def main():\n",
        "  st.title(\"Statistical Tests\")\n",
        "  st.sidebar.title(\"Which test would you like to do today\")\n",
        "\n",
        "  #uploading the data\n",
        "  data = st.file_uploader(\"Upload a Dataset\", type=[\"csv\", \"txt\",\"xlsx\"])\n",
        "\t\tif data is not None:\n",
        "\t\t\tdf = pd.read_csv(data)\n",
        "\t\t\tst.dataframe(df.head())\n",
        "  #the category of tests to select\n",
        "  activities = ['Parametric Test', 'Non-Parametric Test','Normality Tests','Testing Assumptions for Linear Regression','Correlation']\n",
        "  choice = st.sidebar.selectbox(\"Select a Statistical Testing\",activities)\n",
        "\n",
        "  if choice == 'Parametric test':\n",
        "    Parametric= [\"student's t-test\",\"Pairwise t-test\",\"F-test\",\"ANOVA\"]\n",
        "    tests = st.sidebar.multiselect(\"Select the tests you want to conduct\",Parametric)\n",
        "\n",
        "    if tests == \"student's t-test\":\n",
        "      data1,data2 = st.multiselect(\"Select the variables you want to perform the test on (2 variables only)\", df.columns.tolist())\n",
        "      stat, p = stats.ttest_ind(data1, data2)\n",
        "      st.write('stat=%.3f, p=%.3f' % (stat, p))\n",
        "      if p > 0.05:\n",
        "\t      st.write('Probably the same distribution')\n",
        "      else:\n",
        "\t      st.write('Probably different distributions')\n",
        "    \n",
        "    if tests == \"Pairwise t-test\":\n",
        "      data1,data2 = st.multiselect(\"Select the variables you want to perform the test on (2 variables only)\", df.columns.tolist())\n",
        "      stat, p = stats.ttest_rel(data1, data2)\n",
        "      st.write('stat=%.3f, p=%.3f' % (stat, p))\n",
        "      if p > 0.05:\n",
        "\t      st.write('Probably the same distribution')\n",
        "      else:\n",
        "\t      st.write('Probably different distributions')\n",
        "  \n",
        "\n",
        "    \n",
        "  "
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}